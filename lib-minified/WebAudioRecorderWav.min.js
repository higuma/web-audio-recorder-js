(function(e){var n=Math.min,t=Math.max;var s=function(e,n,t){var s=t.length;for(var r=0;r<s;++r)e.setUint8(n+r,t.charCodeAt(r))};var r=function(e,n){this.sampleRate=e;this.numChannels=n;this.numSamples=0;this.dataViews=[]};r.prototype.encode=function(e){var s=e[0].length,r=this.numChannels,a=new DataView(new ArrayBuffer(s*r*2)),o=0;for(var i=0;i<s;++i)for(var f=0;f<r;++f){var u=e[f][i]*32767;a.setInt16(o,u<0?t(u,-32768):n(u,32767),true);o+=2}this.dataViews.push(a);this.numSamples+=s};r.prototype.finish=function(e){var n=this.numChannels*this.numSamples*2,t=new DataView(new ArrayBuffer(44));s(t,0,"RIFF");t.setUint32(4,36+n,true);s(t,8,"WAVE");s(t,12,"fmt ");t.setUint32(16,16,true);t.setUint16(20,1,true);t.setUint16(22,this.numChannels,true);t.setUint32(24,this.sampleRate,true);t.setUint32(28,this.sampleRate*4,true);t.setUint16(32,this.numChannels*2,true);t.setUint16(34,16,true);s(t,36,"data");t.setUint32(40,n,true);this.dataViews.unshift(t);var r=new Blob(this.dataViews,{type:"audio/wav"});this.cleanup();return r};r.prototype.cancel=r.prototype.cleanup=function(){delete this.dataViews};e.WavAudioEncoder=r})(self);var sampleRate=44100,numChannels=2,options=undefined,maxBuffers=undefined,encoder=undefined,recBuffers=undefined,bufferCount=0;function error(e){self.postMessage({command:"error",message:"wav: "+e})}function init(e){sampleRate=e.config.sampleRate;numChannels=e.config.numChannels;options=e.options}function setOptions(e){if(encoder||recBuffers)error("cannot set options during recording");else options=e}function start(e){maxBuffers=Math.ceil(options.timeLimit*sampleRate/e);if(options.encodeAfterRecord)recBuffers=[];else encoder=new WavAudioEncoder(sampleRate,numChannels)}function record(e){if(bufferCount++<maxBuffers)if(encoder)encoder.encode(e);else recBuffers.push(e);else self.postMessage({command:"timeout"})}function postProgress(e){self.postMessage({command:"progress",progress:e})}function finish(){if(recBuffers){postProgress(0);encoder=new WavAudioEncoder(sampleRate,numChannels);var e=Date.now()+options.progressInterval;while(recBuffers.length>0){encoder.encode(recBuffers.shift());var n=Date.now();if(n>e){postProgress((bufferCount-recBuffers.length)/bufferCount);e=n+options.progressInterval}}postProgress(1)}self.postMessage({command:"complete",blob:encoder.finish(options.wav.mimeType)});cleanup()}function cleanup(){encoder=recBuffers=undefined;bufferCount=0}self.onmessage=function(e){var n=e.data;switch(n.command){case"init":init(n);break;case"options":setOptions(n.options);break;case"start":start(n.bufferSize);break;case"record":record(n.buffer);break;case"finish":finish();break;case"cancel":cleanup()}};self.postMessage({command:"loaded"});
